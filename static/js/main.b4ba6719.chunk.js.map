{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledApp","styled","div","App","useState","mid","type","youtube","image","messageList","setMessageList","config","inputBox","sendCallback","value","produce","draft","push","length","text","payload","useEffect","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAMMA,EAAYC,UAAOC,IAAV,mHAOFC,EAAM,WACjB,MAAsCC,mBAAsB,CAC1D,CACEC,IAAK,EACLC,KAAM,OACNC,QAAS,+CAEX,CACEF,IAAK,EACLC,KAAM,OACNE,MAAO,yCATX,mBAAOC,EAAP,KAAoBC,EAApB,KAaMC,EAAS,CACbC,UAAU,EACVC,aAAc,SAACC,GACbJ,EACEK,YAAQN,GAAa,SAAAO,GACnBA,EAAMC,KAAK,CACTZ,IAAKI,EAAYS,OAAS,EAC1BZ,KAAM,QACNa,KAAML,EAAMM,gBAYtB,OALAC,qBAAU,WACRC,QAAQC,IAAId,KACX,CAACA,IAIF,cAACT,EAAD,UACE,cAAC,IAAD,CACES,YAAaA,EACbE,OAAQA,OCrCDa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4ba6719.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ChatBotUI, { MessageList, TextInput } from 'react-chatbot-ui';\n// import ChatBotUI, { MessageList } from './lib';\nimport styled from 'styled-components';\nimport produce from 'immer';\n\nconst StyledApp = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const App = () => {\n  const [messageList, setMessageList] = useState<MessageList>([\n    {\n      mid: 1,\n      type: 'left', \n      youtube: 'https://www.youtube.com/watch?v=2EKrkzG0eVQ'\n    },\n    {\n      mid: 2,\n      type: 'left', \n      image: 'https://random.imagecdn.app/600/600'\n    },\n  ]);\n \n  const config = {\n    inputBox: true,\n    sendCallback: (value: TextInput) => {\n      setMessageList(\n        produce(messageList, draft => {\n          draft.push({\n            mid: messageList.length + 1, \n            type: 'right',\n            text: value.payload\n          })\n        })\n      );\n    },\n  }\n\n  useEffect(() => {\n    console.log(messageList);\n  }, [messageList]);\n\n\n  return (\n    <StyledApp>\n      <ChatBotUI\n        messageList={messageList}\n        config={config}\n      />\n    </StyledApp>\n  );\n};\n ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}